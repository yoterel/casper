{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "vanilla",
            "type": "cppvsdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [
                // "-download_pbo",
                "--mesh",
                "../../resource/GenericHand_weights_woarm_uvshader.fbx", // GenericHand_weights_woarm_uvshader.fbx, GenericHand_weights_woarm.fbx
                // "-leap_poll",
                // "-proj_on",
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}//build//Debug",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "${env:PATH}:${command:cmake.getLaunchTargetDirectory}",
                    // the following is a terrible hack to get python embedding with conda env to work
                    // use set PYTHONPATH="C:/Users/sens/.conda/envs/sandbox/DLLs;C:/Users/sens/.conda/envs/sandbox/Lib;C:/Users/sens/.conda/envs/sandbox/Lib/site-packages"
                    // for this to work in terminal
                    // "name": "PYTHONPATH",
                    // "value": "C:/Users/sens/.conda/envs/sandbox/DLLs;C:/Users/sens/.conda/envs/sandbox/Lib;C:/Users/sens/.conda/envs/sandbox/Lib/site-packages",//"${env:PYTHONPATH}:${command:cmake.getLaunchTargetDirectory}"
                    // set PYTHONHOME=C:/Users/sens/AppData/Local/Programs/Python/Python311
                    "name": "PYTHONHOME",
                    "value": "C:/Users/sens/AppData/Local/Programs/Python/Python311"

                },
            ],
            "console": "externalTerminal"
        },
        {
            "name": "dyna_example",
            "type": "cppvsdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [
                "../../resource/test_pattern_60fps.mp4",
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}//build//Debug",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "${env:PATH}:${command:cmake.getLaunchTargetDirectory}"
                },
            ],
            "console": "externalTerminal"
        },
        {
            "name": "onyx",
            "type": "cppvsdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [
                "C:/src/augmented_hands/resource/models/palm_detection_full.onnx"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}//build//Debug",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "${env:PATH}:${command:cmake.getLaunchTargetDirectory}"
                },
            ],
            "console": "externalTerminal"
        },
        {
            "name": "Python: calibrate",
            "type": "python",
            "request": "launch",
            "program": "build/Release/calibration.py",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "name": "Python: cur file",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "cwd": "C:/src/augmented_hands/build/Release/",
            "console": "integratedTerminal",
            "justMyCode": true
        }
    ]
}